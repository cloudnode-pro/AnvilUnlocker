name: CI

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]
  release:
    types: [ "published" ]

jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    outputs:
      VERSION: ${{ steps.version.outputs.VERSION }}
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          fetch-tags: "true"

      - name: Set Up Java
        uses: actions/setup-java@v4
        with:
          distribution: "temurin"
          java-version: "17"

      # Use cache to speed up build
      - name: Cache Maven Repo
        uses: actions/cache@v4
        id: cache
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}

      - name: Get version
        run: |
          TAG=$(git describe --tags --always)
          echo "VERSION=${TAG#v}" >> $GITHUB_OUTPUT
        id: version

      - name: Set version
        run: mvn -B versions:set -DnewVersion=${{ steps.version.outputs.VERSION }} -DgenerateBackupPoms=false

      - name: Build With Maven
        run: mvn -e clean package -am -P all

      - name: Upload Distributable Jar
        id: upload-final
        uses: actions/upload-artifact@v4
        with:
          name: dist
          path: ./target/AnvilUnlocker-${{ steps.version.outputs.VERSION }}.jar

  release:
    name: Create Github Release
    needs: [ build ]
    if: github.event_name == 'release'
    runs-on: ubuntu-latest
    steps:
      - name: Download Artifacts
        uses: actions/download-artifact@v4

      - name: Upload to release
        uses: JasonEtco/upload-to-release@master
        with:
          args: ./dist/AnvilUnlocker-${{ needs.build.outputs.VERSION }}.jar application/java-archive
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
